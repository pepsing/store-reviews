{"version":3,"sources":["components/AppList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Paragraph","Typography","PAGE_SIZE","AppList","apps","setApps","useState","selectedApp","setSelectedApp","reviews","setReviews","loading","setLoading","isModalVisible","setIsModalVisible","form","Form","useForm","refreshing","setRefreshing","editingApp","setEditingApp","currentPage","setCurrentPage","ios","android","authModalVisible","setAuthModalVisible","authCode","setAuthCode","localStorage","getItem","authAction","setAuthAction","Promise","resolve","countries","setCountries","useEffect","async","response","fetch","data","json","error","console","message","loadCountries","fetchApps","axios","get","fetchReviews","appId","executeWithAuth","action","_error$response","status","removeItem","interceptor","interceptors","request","use","config","newConfig","headers","eject","calculateRatingStats","monthlyStats","forEach","review","date","Date","created_at","monthKey","getFullYear","String","getMonth","padStart","sum","count","platform","rating","result","Object","entries","sort","_ref","_ref2","dateA","dateB","localeCompare","_ref3","stats","push","average_rating","iosReviews","filter","androidReviews","calculateAverageRating","length","reduce","acc","Number","toFixed","iosAverageRating","androidAverageRating","_jsxs","style","padding","children","Row","gutter","justify","align","_jsx","Col","Button","type","icon","PlusOutlined","onClick","marginTop","map","app","xs","sm","md","lg","Card","title","name","extra","e","stopPropagation","EditOutlined","setFieldsValue","Popconfirm","onConfirm","delete","success","id","handleDeleteApp","okText","cancelText","danger","DeleteOutlined","hoverable","app_store_id","play_store_id","Group","SyncOutlined","spin","post","handleRefreshReviews","DownloadOutlined","window","open","handleExportReviews","textAlign","Spin","_Fragment","ResponsiveContainer","width","height","LineChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","domain","Tooltip","formatter","value","Legend","Line","stroke","stat","Tabs","defaultActiveKey","TabPane","tab","slice","span","size","repeat","ellipsis","rows","expandable","symbol","content","author","toLocaleString","Pagination","current","onChange","page","prev","total","pageSize","showTotal","Modal","visible","onCancel","resetFields","footer","onFinish","put","values","layout","Item","label","rules","required","Input","Select","Option","initialValue","_ref4","code","_ref5","pattern","placeholder","htmlType","onOk","setItem","Password","target","Header","Content","Layout","App","background","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d38f8f1.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, Row, Col, Button, Modal, Form, Input, Select, Spin, message, Popconfirm, Tabs, Pagination, Typography } from 'antd';\nimport { PlusOutlined, SyncOutlined, EditOutlined, DeleteOutlined, DownloadOutlined } from '@ant-design/icons';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport axios, { AxiosRequestConfig } from 'axios';\n\ninterface App {\n  id: number;\n  name: string;\n  platform: string;\n  app_store_id?: string;\n  play_store_id?: string;\n}\n\ninterface Review {\n  id: number;\n  rating: number;\n  content: string;\n  author: string;\n  platform: 'ios' | 'android';\n  created_at: string;\n}\n\ninterface RatingStats {\n  date: string;\n  platform: string;\n  average_rating: number;\n}\n\ninterface ChartDatum {\n  platform: string;\n  average_rating: number;\n  percentage?: string;\n  date?: string;\n}\n\ntype PlatformStats = {\n  sum: number;\n  count: number;\n};\n\ntype MonthlyStatsType = {\n  [key: string]: {\n    ios: PlatformStats;\n    android: PlatformStats;\n  };\n};\n\nconst { Paragraph } = Typography;\nconst PAGE_SIZE = 10; // 每页显示的评论数\n\nexport const AppList: React.FC = () => {\n  const [apps, setApps] = useState<App[]>([]);\n  const [selectedApp, setSelectedApp] = useState<App | null>(null);\n  const [reviews, setReviews] = useState<Review[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [form] = Form.useForm();\n  const [refreshing, setRefreshing] = useState(false);\n  const [editingApp, setEditingApp] = useState<App | null>(null);\n  const [currentPage, setCurrentPage] = useState<{ ios: number; android: number }>({\n    ios: 1,\n    android: 1\n  });\n  const [authModalVisible, setAuthModalVisible] = useState(false);\n  const [authCode, setAuthCode] = useState(localStorage.getItem('authCode') || '');\n  const [authAction, setAuthAction] = useState<() => Promise<void>>(() => Promise.resolve());\n  const [countries, setCountries] = useState<{[key: string]: string}>({});\n\n  // 加载国家配置\n  useEffect(() => {\n    const loadCountries = async () => {\n      try {\n        const response = await fetch('/config/countries.json');\n        const data = await response.json();\n        setCountries(data);\n      } catch (error) {\n        console.error('加载国家配置失败:', error);\n        message.error('加载国家配置失败');\n      }\n    };\n    loadCountries();\n  }, []);\n\n  // 获取应用列表\n  useEffect(() => {\n    fetchApps();\n  }, []);\n\n  const fetchApps = async () => {\n    try {\n      const response = await axios.get('/api/apps');\n      setApps(response.data);\n    } catch (error) {\n      message.error('获取应用列表失败');\n    }\n  };\n\n  // 获取应用评论\n  const fetchReviews = async (appId: number) => {\n    setLoading(true);\n    try {\n      const response = await axios.get(`/api/apps/${appId}/reviews`);\n      setReviews(response.data);\n    } catch (error) {\n      message.error('获取评论失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 验证授权码并执行操作\n  const executeWithAuth = async (action: () => Promise<void>) => {\n    if (!authCode) {\n      setAuthAction(() => action);\n      setAuthModalVisible(true);\n      return;\n    }\n    try {\n      await action();\n    } catch (error: any) {\n      if (error.response?.status === 401) {\n        message.error('授权码无效');\n        setAuthCode('');\n        localStorage.removeItem('authCode');\n        setAuthAction(() => action);\n        setAuthModalVisible(true);\n      } else {\n        throw error;\n      }\n    }\n  };\n\n  // 设置请求头\n  useEffect(() => {\n    const interceptor = axios.interceptors.request.use((config: AxiosRequestConfig) => {\n      const newConfig = { ...config };\n      newConfig.headers = newConfig.headers || {};\n      if (authCode) {\n        newConfig.headers['X-Auth-Code'] = authCode;\n      }\n      return newConfig;\n    });\n\n    return () => {\n      axios.interceptors.request.eject(interceptor);\n    };\n  }, [authCode]);\n\n  // 添加新应用\n  const handleAddApp = async (values: any) => {\n    await executeWithAuth(async () => {\n      await axios.post('/api/apps', values);\n      message.success('添加应用成功');\n      setIsModalVisible(false);\n      form.resetFields();\n      fetchApps();\n    });\n  };\n\n  // 修改应用\n  const handleEditApp = async (values: any) => {\n    await executeWithAuth(async () => {\n      await axios.put(`/api/apps/${editingApp?.id}`, values);\n      message.success('修改应用成功');\n      setEditingApp(null);\n      form.resetFields();\n      fetchApps();\n    });\n  };\n\n  // 删除应用\n  const handleDeleteApp = async (appId: number) => {\n    await executeWithAuth(async () => {\n      await axios.delete(`/api/apps/${appId}`);\n      message.success('删除应用成功');\n      if (selectedApp?.id === appId) {\n        setSelectedApp(null);\n      }\n      fetchApps();\n    });\n  };\n\n  // 计算评分统计数据\n  const calculateRatingStats = (): RatingStats[] => {\n    const monthlyStats: MonthlyStatsType = {};\n    \n    reviews.forEach((review: Review) => {\n      const date = new Date(review.created_at);\n      const monthKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n      \n      if (!monthlyStats[monthKey]) {\n        monthlyStats[monthKey] = {\n          ios: { sum: 0, count: 0 },\n          android: { sum: 0, count: 0 }\n        };\n      }\n      \n      monthlyStats[monthKey][review.platform].sum += review.rating;\n      monthlyStats[monthKey][review.platform].count += 1;\n    });\n    \n    // 转换为图表所需的数据格式\n    const result: RatingStats[] = [];\n    Object.entries(monthlyStats)\n      .sort(([dateA], [dateB]) => dateA.localeCompare(dateB)) // 按日期排序\n      .forEach(([date, stats]) => {\n        // 添加 iOS 数据\n        if (stats.ios.count > 0) {\n          result.push({\n            date,\n            platform: 'iOS',\n            average_rating: stats.ios.sum / stats.ios.count\n          });\n        }\n        \n        // 添加 Android 数据\n        if (stats.android.count > 0) {\n          result.push({\n            date,\n            platform: 'Android',\n            average_rating: stats.android.sum / stats.android.count\n          });\n        }\n      });\n    \n    return result;\n  };\n\n  // 手动刷新评分\n  const handleRefreshReviews = async (appId: number) => {\n    setRefreshing(true);\n    try {\n      await axios.post(`/api/apps/${appId}/refresh`);\n      message.success('评分更新成功');\n      // 重新获取评论\n      await fetchReviews(appId);\n    } catch (error) {\n      message.error('评分更新失败');\n    } finally {\n      setRefreshing(false);\n    }\n  };\n\n  // 导出评论\n  const handleExportReviews = async (appId: number) => {\n    try {\n      message.loading('正在准备导出文件...', 1);\n      // 使用 window.open 直接下载文件\n      window.open(`/api/apps/${appId}/export`, '_blank');\n      message.success('评论导出成功');\n    } catch (error) {\n      message.error('评论导出失败');\n    }\n  };\n\n  // 分离 iOS 和 Android 评论\n  const iosReviews = reviews.filter(review => review.platform === 'ios');\n  const androidReviews = reviews.filter(review => review.platform === 'android');\n\n  // 计算当前均分\n  const calculateAverageRating = (reviews: Review[]) => {\n    if (reviews.length === 0) return 0;\n    const sum = reviews.reduce((acc, review) => acc + review.rating, 0);\n    return Number((sum / reviews.length).toFixed(1));\n  };\n\n  const iosAverageRating = calculateAverageRating(iosReviews);\n  const androidAverageRating = calculateAverageRating(androidReviews);\n\n  return (\n    <div style={{ padding: '24px' }}>\n      <Row gutter={[16, 16]} justify=\"space-between\" align=\"middle\">\n        <Col>\n          <h2>应用列表</h2>\n        </Col>\n        <Col>\n          <Button \n            type=\"primary\" \n            icon={<PlusOutlined />}\n            onClick={() => setIsModalVisible(true)}\n          >\n            添加应用\n          </Button>\n        </Col>\n      </Row>\n\n      <Row gutter={[16, 16]} style={{ marginTop: '16px' }}>\n        {apps.map(app => (\n          <Col key={app.id} xs={24} sm={12} md={8} lg={6}>\n            <Card\n              title={app.name}\n              extra={\n                <div onClick={e => e.stopPropagation()}>\n                  <Button\n                    type=\"text\"\n                    icon={<EditOutlined />}\n                    onClick={() => {\n                      setEditingApp(app);\n                      form.setFieldsValue(app);\n                    }}\n                  />\n                  <Popconfirm\n                    title=\"确定要删除这个应用吗？\"\n                    onConfirm={() => handleDeleteApp(app.id)}\n                    okText=\"确定\"\n                    cancelText=\"取消\"\n                  >\n                    <Button type=\"text\" danger icon={<DeleteOutlined />} />\n                  </Popconfirm>\n                </div>\n              }\n              hoverable\n              onClick={() => {\n                setSelectedApp(app);\n                fetchReviews(app.id);\n              }}\n            >\n              <p>平台: {app.platform}</p>\n              {app.app_store_id && <p>App Store ID: {app.app_store_id}</p>}\n              {app.play_store_id && <p>Play Store ID: {app.play_store_id}</p>}\n            </Card>\n          </Col>\n        ))}\n      </Row>\n\n      {selectedApp && (\n        <Card style={{ marginTop: '24px' }}>\n          <Row justify=\"space-between\" align=\"middle\">\n            <Col>\n              <h3>{selectedApp.name} 评分趋势</h3>\n            </Col>\n            <Col>\n              <Button.Group>\n                <Button\n                  type=\"primary\"\n                  icon={<SyncOutlined spin={refreshing} />}\n                  onClick={() => handleRefreshReviews(selectedApp.id)}\n                  loading={refreshing}\n                >\n                  更新评分\n                </Button>\n                <Button\n                  type=\"primary\"\n                  icon={<DownloadOutlined />}\n                  onClick={() => handleExportReviews(selectedApp.id)}\n                >\n                  导出评论\n                </Button>\n              </Button.Group>\n            </Col>\n          </Row>\n          {loading ? (\n            <div style={{ textAlign: 'center', padding: '40px' }}>\n              <Spin />\n            </div>\n          ) : (\n            <>\n              <ResponsiveContainer width=\"100%\" height={400}>\n                <LineChart data={calculateRatingStats()}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"date\" />\n                  <YAxis domain={[0, 5]} />\n                  <Tooltip formatter={(value: number) => value.toFixed(2)} />\n                  <Legend />\n                  <Line type=\"monotone\" dataKey=\"average_rating\" name=\"iOS\" stroke=\"#8884d8\" data={calculateRatingStats().filter(stat => stat.platform === 'iOS')} />\n                  <Line type=\"monotone\" dataKey=\"average_rating\" name=\"Android\" stroke=\"#82ca9d\" data={calculateRatingStats().filter(stat => stat.platform === 'Android')} />\n                </LineChart>\n              </ResponsiveContainer>\n              \n              <div style={{ marginTop: '24px' }}>\n                <h3>最新评论</h3>\n                <Tabs defaultActiveKey=\"ios\">\n                  <Tabs.TabPane \n                    tab={`iOS 评论 (${iosAverageRating}⭐)`}\n                    key=\"ios\"\n                  >\n                    <Row gutter={[16, 16]}>\n                      {iosReviews\n                        .slice(\n                          (currentPage.ios - 1) * PAGE_SIZE,\n                          currentPage.ios * PAGE_SIZE\n                        )\n                        .map(review => (\n                          <Col key={review.id} span={24}>\n                            <Card size=\"small\">\n                              <p>评分: {'⭐'.repeat(review.rating)}</p>\n                              <p>内容: \n                                <Paragraph\n                                  ellipsis={{ \n                                    rows: 2,\n                                    expandable: true,\n                                    symbol: '展开'\n                                  }}\n                                >\n                                  {review.content}\n                                </Paragraph>\n                              </p>\n                              <p>作者: {review.author}</p>\n                              <p>时间: {new Date(review.created_at).toLocaleString()}</p>\n                            </Card>\n                          </Col>\n                        ))}\n                      {iosReviews.length === 0 && (\n                        <Col span={24}>\n                          <Card size=\"small\">\n                            <p>暂无 iOS 评论</p>\n                          </Card>\n                        </Col>\n                      )}\n                    </Row>\n                    {iosReviews.length > 0 && (\n                      <div style={{ textAlign: 'right', marginTop: '16px' }}>\n                        <Pagination\n                          current={currentPage.ios}\n                          onChange={(page) => setCurrentPage(prev => ({ ...prev, ios: page }))}\n                          total={iosReviews.length}\n                          pageSize={PAGE_SIZE}\n                          showTotal={(total) => `共 ${total} 条评论`}\n                        />\n                      </div>\n                    )}\n                  </Tabs.TabPane>\n                  <Tabs.TabPane \n                    tab={`Android 评论 (${androidAverageRating}⭐)`}\n                    key=\"android\"\n                  >\n                    <Row gutter={[16, 16]}>\n                      {androidReviews\n                        .slice(\n                          (currentPage.android - 1) * PAGE_SIZE,\n                          currentPage.android * PAGE_SIZE\n                        )\n                        .map(review => (\n                          <Col key={review.id} span={24}>\n                            <Card size=\"small\">\n                              <p>评分: {'⭐'.repeat(review.rating)}</p>\n                              <p>内容: \n                                <Paragraph\n                                  ellipsis={{ \n                                    rows: 2,\n                                    expandable: true,\n                                    symbol: '展开'\n                                  }}\n                                >\n                                  {review.content}\n                                </Paragraph>\n                              </p>\n                              <p>作者: {review.author}</p>\n                              <p>时间: {new Date(review.created_at).toLocaleString()}</p>\n                            </Card>\n                          </Col>\n                        ))}\n                      {androidReviews.length === 0 && (\n                        <Col span={24}>\n                          <Card size=\"small\">\n                            <p>暂无 Android 评论</p>\n                          </Card>\n                        </Col>\n                      )}\n                    </Row>\n                    {androidReviews.length > 0 && (\n                      <div style={{ textAlign: 'right', marginTop: '16px' }}>\n                        <Pagination\n                          current={currentPage.android}\n                          onChange={(page) => setCurrentPage(prev => ({ ...prev, android: page }))}\n                          total={androidReviews.length}\n                          pageSize={PAGE_SIZE}\n                          showTotal={(total) => `共 ${total} 条评论`}\n                        />\n                      </div>\n                    )}\n                  </Tabs.TabPane>\n                </Tabs>\n              </div>\n            </>\n          )}\n        </Card>\n      )}\n\n      <Modal\n        title={editingApp ? \"修改应用\" : \"添加应用\"}\n        visible={isModalVisible || !!editingApp}\n        onCancel={() => {\n          setIsModalVisible(false);\n          setEditingApp(null);\n          form.resetFields();\n        }}\n        footer={null}\n      >\n        <Form\n          form={form}\n          onFinish={editingApp ? handleEditApp : handleAddApp}\n          layout=\"vertical\"\n        >\n          <Form.Item\n            name=\"name\"\n            label=\"应用名称\"\n            rules={[{ required: true }]}\n          >\n            <Input />\n          </Form.Item>\n          \n          <Form.Item\n            name=\"platform\"\n            label=\"平台\"\n            rules={[{ required: true }]}\n          >\n            <Select>\n              <Select.Option value=\"ios\">iOS</Select.Option>\n              <Select.Option value=\"android\">Android</Select.Option>\n              <Select.Option value=\"both\">双平台</Select.Option>\n            </Select>\n          </Form.Item>\n          \n          <Form.Item\n            name=\"app_store_country\"\n            label=\"App Store 地区\"\n            initialValue=\"cn\"\n          >\n            <Select>\n              {Object.entries(countries).map(([code, name]) => (\n                <Select.Option key={code} value={code}>\n                  {name}\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n          \n          <Form.Item\n            name=\"play_store_country\"\n            label=\"Play Store 地区\"\n            initialValue=\"cn\"\n          >\n            <Select>\n              {Object.entries(countries).map(([code, name]) => (\n                <Select.Option key={code} value={code}>\n                  {name}\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n          \n          <Form.Item\n            name=\"app_store_id\"\n            label=\"App Store ID\"\n            rules={[\n              {\n                pattern: /^\\d+$/,\n                message: 'App Store ID 必须是数字'\n              }\n            ]}\n          >\n            <Input placeholder=\"例如：414478124\" />\n          </Form.Item>\n          \n          <Form.Item\n            name=\"play_store_id\"\n            label=\"Play Store ID\"\n          >\n            <Input />\n          </Form.Item>\n          \n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              提交\n            </Button>\n          </Form.Item>\n        </Form>\n      </Modal>\n\n      <Modal\n        title=\"请输入授权码\"\n        visible={authModalVisible}\n        onOk={async () => {\n          try {\n            if (!authCode) {\n              message.error('授权码不能为空');\n              return;\n            }\n            await authAction();\n            localStorage.setItem('authCode', authCode);\n            setAuthModalVisible(false);\n          } catch (error) {\n            message.error('操作失败');\n            localStorage.removeItem('authCode');\n          }\n        }}\n        onCancel={() => {\n          setAuthModalVisible(false);\n          setAuthAction(() => Promise.resolve());\n          setAuthCode('');\n        }}\n      >\n        <Input.Password\n          value={authCode}\n          onChange={e => setAuthCode(e.target.value)}\n          placeholder=\"请输入授权码\"\n        />\n      </Modal>\n    </div>\n  );\n}; ","import React from 'react';\nimport { Layout } from 'antd';\nimport { AppList } from './components/AppList';\nimport './App.less';\n\nconst { Header, Content } = Layout;\n\nconst App: React.FC = () => {\n  return (\n    <Layout>\n      <Header style={{ background: '#fff', padding: '0 24px' }}>\n        <h1>应用评分追踪系统</h1>\n      </Header>\n      <Content>\n        <AppList />\n      </Content>\n    </Layout>\n  );\n};\n\nexport default App; ","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}