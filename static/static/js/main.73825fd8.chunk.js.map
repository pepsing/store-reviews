{"version":3,"sources":["components/AppList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Paragraph","Typography","PAGE_SIZE","COUNTRIES","cn","us","jp","kr","hk","tw","sg","my","id","ph","mm","th","vn","AppList","apps","setApps","useState","selectedApp","setSelectedApp","reviews","setReviews","loading","setLoading","isModalVisible","setIsModalVisible","form","Form","useForm","refreshing","setRefreshing","editingApp","setEditingApp","currentPage","setCurrentPage","ios","android","authModalVisible","setAuthModalVisible","authCode","setAuthCode","localStorage","getItem","authAction","setAuthAction","Promise","resolve","useEffect","fetchApps","async","response","axios","get","data","error","message","fetchReviews","appId","executeWithAuth","action","_error$response","status","removeItem","interceptors","request","use","config","newConfig","headers","calculateRatingStats","stats","forEach","review","date","created_at","split","platform","push","rating","result","Object","entries","_ref","platforms","length","average_rating","reduce","a","b","sort","localeCompare","iosReviews","filter","androidReviews","calculateAverageRating","sum","acc","Number","toFixed","iosAverageRating","androidAverageRating","_jsxs","style","padding","children","Row","gutter","justify","align","_jsx","Col","Button","type","icon","PlusOutlined","onClick","marginTop","map","app","xs","sm","md","lg","Card","title","name","extra","e","stopPropagation","EditOutlined","setFieldsValue","Popconfirm","onConfirm","delete","success","handleDeleteApp","okText","cancelText","danger","DeleteOutlined","hoverable","app_store_id","play_store_id","Group","SyncOutlined","spin","post","handleRefreshReviews","DownloadOutlined","window","open","handleExportReviews","textAlign","Spin","_Fragment","ResponsiveContainer","width","height","LineChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","domain","Tooltip","formatter","value","Legend","Line","stroke","stat","Tabs","defaultActiveKey","TabPane","tab","slice","span","size","repeat","ellipsis","rows","expandable","symbol","content","author","Date","toLocaleString","Pagination","current","onChange","page","prev","total","pageSize","showTotal","Modal","visible","onCancel","resetFields","footer","onFinish","put","values","layout","Item","label","rules","required","Input","Select","Option","initialValue","_ref2","code","_ref3","pattern","placeholder","htmlType","onOk","setItem","Password","target","Header","Content","Layout","App","background","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73825fd8.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, Row, Col, Button, Modal, Form, Input, Select, Spin, message, Popconfirm, Tabs, Pagination, Typography } from 'antd';\nimport { PlusOutlined, SyncOutlined, EditOutlined, DeleteOutlined, DownloadOutlined } from '@ant-design/icons';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport axios, { AxiosRequestConfig } from 'axios';\n\ninterface App {\n  id: number;\n  name: string;\n  platform: string;\n  app_store_id?: string;\n  play_store_id?: string;\n}\n\ninterface Review {\n  id: number;\n  rating: number;\n  content: string;\n  author: string;\n  platform: 'ios' | 'android';\n  created_at: string;\n}\n\ninterface RatingStats {\n  date: string;\n  platform: string;\n  average_rating: number;\n}\n\ninterface ChartDatum {\n  platform: string;\n  average_rating: number;\n  percentage?: string;\n  date?: string;\n}\n\nconst { Paragraph } = Typography;\nconst PAGE_SIZE = 10; // 每页显示的评论数\n\nconst COUNTRIES = {\n  cn: \"中国\",\n  us: \"美国\",\n  jp: \"日本\",\n  kr: \"韩国\",\n  hk: \"香港\",\n  tw: \"台湾\",\n  sg: \"新加坡\",\n  my: \"马来西亚\",\n  id: \"印度尼西亚\",\n  ph: \"菲律宾\",\n  mm: \"缅甸\",\n  th: \"泰国\",\n  vn: \"越南\"\n};\n\nexport const AppList: React.FC = () => {\n  const [apps, setApps] = useState<App[]>([]);\n  const [selectedApp, setSelectedApp] = useState<App | null>(null);\n  const [reviews, setReviews] = useState<Review[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [form] = Form.useForm();\n  const [refreshing, setRefreshing] = useState(false);\n  const [editingApp, setEditingApp] = useState<App | null>(null);\n  const [currentPage, setCurrentPage] = useState<{ ios: number; android: number }>({\n    ios: 1,\n    android: 1\n  });\n  const [authModalVisible, setAuthModalVisible] = useState(false);\n  const [authCode, setAuthCode] = useState(localStorage.getItem('authCode') || '');\n  const [authAction, setAuthAction] = useState<() => Promise<void>>(() => Promise.resolve());\n\n  // 获取应用列表\n  useEffect(() => {\n    fetchApps();\n  }, []);\n\n  const fetchApps = async () => {\n    try {\n      const response = await axios.get('/api/apps');\n      setApps(response.data);\n    } catch (error) {\n      message.error('获取应用列表失败');\n    }\n  };\n\n  // 获取应用评论\n  const fetchReviews = async (appId: number) => {\n    setLoading(true);\n    try {\n      const response = await axios.get(`/api/apps/${appId}/reviews`);\n      setReviews(response.data);\n    } catch (error) {\n      message.error('获取评论失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 验证授权码并执行操作\n  const executeWithAuth = async (action: () => Promise<void>) => {\n    if (!authCode) {\n      setAuthAction(() => action);\n      setAuthModalVisible(true);\n      return;\n    }\n    try {\n      await action();\n    } catch (error: any) {\n      if (error.response?.status === 401) {\n        message.error('授权码无效');\n        setAuthCode('');\n        localStorage.removeItem('authCode');\n        setAuthAction(() => action);\n        setAuthModalVisible(true);\n      } else {\n        throw error;\n      }\n    }\n  };\n\n  // 设置请求头\n  axios.interceptors.request.use((config: AxiosRequestConfig) => {\n    const newConfig = { ...config };\n    newConfig.headers = newConfig.headers || {};\n    if (authCode) {\n      newConfig.headers['X-Auth-Code'] = authCode;\n    }\n    return newConfig;\n  });\n\n  // 添加新应用\n  const handleAddApp = async (values: any) => {\n    await executeWithAuth(async () => {\n      await axios.post('/api/apps', values);\n      message.success('添加应用成功');\n      setIsModalVisible(false);\n      form.resetFields();\n      fetchApps();\n    });\n  };\n\n  // 修改应用\n  const handleEditApp = async (values: any) => {\n    await executeWithAuth(async () => {\n      await axios.put(`/api/apps/${editingApp?.id}`, values);\n      message.success('修改应用成功');\n      setEditingApp(null);\n      form.resetFields();\n      fetchApps();\n    });\n  };\n\n  // 删除应用\n  const handleDeleteApp = async (appId: number) => {\n    await executeWithAuth(async () => {\n      await axios.delete(`/api/apps/${appId}`);\n      message.success('删除应用成功');\n      if (selectedApp?.id === appId) {\n        setSelectedApp(null);\n      }\n      fetchApps();\n    });\n  };\n\n  // 计算评分统计数据\n  const calculateRatingStats = (): RatingStats[] => {\n    const stats: { [key: string]: { ios: number[], android: number[] } } = {};\n    \n    reviews.forEach(review => {\n      const date = review.created_at.split('T')[0];\n      if (!stats[date]) {\n        stats[date] = { ios: [], android: [] };\n      }\n      stats[date][review.platform].push(review.rating);\n    });\n\n    const result: RatingStats[] = [];\n    Object.entries(stats).forEach(([date, platforms]) => {\n      if (platforms.ios.length > 0) {\n        result.push({\n          date,\n          platform: 'iOS',\n          average_rating: platforms.ios.reduce((a, b) => a + b, 0) / platforms.ios.length\n        });\n      }\n      if (platforms.android.length > 0) {\n        result.push({\n          date,\n          platform: 'Android',\n          average_rating: platforms.android.reduce((a, b) => a + b, 0) / platforms.android.length\n        });\n      }\n    });\n\n    return result.sort((a, b) => a.date.localeCompare(b.date));\n  };\n\n  // 手动刷新评分\n  const handleRefreshReviews = async (appId: number) => {\n    setRefreshing(true);\n    try {\n      await axios.post(`/api/apps/${appId}/refresh`);\n      message.success('评分更新成功');\n      // 重新获取评论\n      await fetchReviews(appId);\n    } catch (error) {\n      message.error('评分更新失败');\n    } finally {\n      setRefreshing(false);\n    }\n  };\n\n  // 导出评论\n  const handleExportReviews = async (appId: number) => {\n    try {\n      message.loading('正在准备导出文件...', 1);\n      // 使用 window.open 直接下载文件\n      window.open(`/api/apps/${appId}/export`, '_blank');\n      message.success('评论导出成功');\n    } catch (error) {\n      message.error('评论导出失败');\n    }\n  };\n\n  // 分离 iOS 和 Android 评论\n  const iosReviews = reviews.filter(review => review.platform === 'ios');\n  const androidReviews = reviews.filter(review => review.platform === 'android');\n\n  // 计算当前均分\n  const calculateAverageRating = (reviews: Review[]) => {\n    if (reviews.length === 0) return 0;\n    const sum = reviews.reduce((acc, review) => acc + review.rating, 0);\n    return Number((sum / reviews.length).toFixed(1));\n  };\n\n  const iosAverageRating = calculateAverageRating(iosReviews);\n  const androidAverageRating = calculateAverageRating(androidReviews);\n\n  return (\n    <div style={{ padding: '24px' }}>\n      <Row gutter={[16, 16]} justify=\"space-between\" align=\"middle\">\n        <Col>\n          <h2>应用列表</h2>\n        </Col>\n        <Col>\n          <Button \n            type=\"primary\" \n            icon={<PlusOutlined />}\n            onClick={() => setIsModalVisible(true)}\n          >\n            添加应用\n          </Button>\n        </Col>\n      </Row>\n\n      <Row gutter={[16, 16]} style={{ marginTop: '16px' }}>\n        {apps.map(app => (\n          <Col key={app.id} xs={24} sm={12} md={8} lg={6}>\n            <Card\n              title={app.name}\n              extra={\n                <div onClick={e => e.stopPropagation()}>\n                  <Button\n                    type=\"text\"\n                    icon={<EditOutlined />}\n                    onClick={() => {\n                      setEditingApp(app);\n                      form.setFieldsValue(app);\n                    }}\n                  />\n                  <Popconfirm\n                    title=\"确定要删除这个应用吗？\"\n                    onConfirm={() => handleDeleteApp(app.id)}\n                    okText=\"确定\"\n                    cancelText=\"取消\"\n                  >\n                    <Button type=\"text\" danger icon={<DeleteOutlined />} />\n                  </Popconfirm>\n                </div>\n              }\n              hoverable\n              onClick={() => {\n                setSelectedApp(app);\n                fetchReviews(app.id);\n              }}\n            >\n              <p>平台: {app.platform}</p>\n              {app.app_store_id && <p>App Store ID: {app.app_store_id}</p>}\n              {app.play_store_id && <p>Play Store ID: {app.play_store_id}</p>}\n            </Card>\n          </Col>\n        ))}\n      </Row>\n\n      {selectedApp && (\n        <Card style={{ marginTop: '24px' }}>\n          <Row justify=\"space-between\" align=\"middle\">\n            <Col>\n              <h3>{selectedApp.name} 评分趋势</h3>\n            </Col>\n            <Col>\n              <Button.Group>\n                <Button\n                  type=\"primary\"\n                  icon={<SyncOutlined spin={refreshing} />}\n                  onClick={() => handleRefreshReviews(selectedApp.id)}\n                  loading={refreshing}\n                >\n                  更新评分\n                </Button>\n                <Button\n                  type=\"primary\"\n                  icon={<DownloadOutlined />}\n                  onClick={() => handleExportReviews(selectedApp.id)}\n                >\n                  导出评论\n                </Button>\n              </Button.Group>\n            </Col>\n          </Row>\n          {loading ? (\n            <div style={{ textAlign: 'center', padding: '40px' }}>\n              <Spin />\n            </div>\n          ) : (\n            <>\n              <ResponsiveContainer width=\"100%\" height={400}>\n                <LineChart data={calculateRatingStats()}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"date\" />\n                  <YAxis domain={[0, 5]} />\n                  <Tooltip formatter={(value: number) => value.toFixed(2)} />\n                  <Legend />\n                  <Line type=\"monotone\" dataKey=\"average_rating\" name=\"iOS\" stroke=\"#8884d8\" data={calculateRatingStats().filter(stat => stat.platform === 'iOS')} />\n                  <Line type=\"monotone\" dataKey=\"average_rating\" name=\"Android\" stroke=\"#82ca9d\" data={calculateRatingStats().filter(stat => stat.platform === 'Android')} />\n                </LineChart>\n              </ResponsiveContainer>\n              \n              <div style={{ marginTop: '24px' }}>\n                <h3>最新评论</h3>\n                <Tabs defaultActiveKey=\"ios\">\n                  <Tabs.TabPane \n                    tab={`iOS 评论 (${iosAverageRating}⭐)`}\n                    key=\"ios\"\n                  >\n                    <Row gutter={[16, 16]}>\n                      {iosReviews\n                        .slice(\n                          (currentPage.ios - 1) * PAGE_SIZE,\n                          currentPage.ios * PAGE_SIZE\n                        )\n                        .map(review => (\n                          <Col key={review.id} span={24}>\n                            <Card size=\"small\">\n                              <p>评分: {'⭐'.repeat(review.rating)}</p>\n                              <p>内容: \n                                <Paragraph\n                                  ellipsis={{ \n                                    rows: 2,\n                                    expandable: true,\n                                    symbol: '展开'\n                                  }}\n                                >\n                                  {review.content}\n                                </Paragraph>\n                              </p>\n                              <p>作者: {review.author}</p>\n                              <p>时间: {new Date(review.created_at).toLocaleString()}</p>\n                            </Card>\n                          </Col>\n                        ))}\n                      {iosReviews.length === 0 && (\n                        <Col span={24}>\n                          <Card size=\"small\">\n                            <p>暂无 iOS 评论</p>\n                          </Card>\n                        </Col>\n                      )}\n                    </Row>\n                    {iosReviews.length > 0 && (\n                      <div style={{ textAlign: 'right', marginTop: '16px' }}>\n                        <Pagination\n                          current={currentPage.ios}\n                          onChange={(page) => setCurrentPage(prev => ({ ...prev, ios: page }))}\n                          total={iosReviews.length}\n                          pageSize={PAGE_SIZE}\n                          showTotal={(total) => `共 ${total} 条评论`}\n                        />\n                      </div>\n                    )}\n                  </Tabs.TabPane>\n                  <Tabs.TabPane \n                    tab={`Android 评论 (${androidAverageRating}⭐)`}\n                    key=\"android\"\n                  >\n                    <Row gutter={[16, 16]}>\n                      {androidReviews\n                        .slice(\n                          (currentPage.android - 1) * PAGE_SIZE,\n                          currentPage.android * PAGE_SIZE\n                        )\n                        .map(review => (\n                          <Col key={review.id} span={24}>\n                            <Card size=\"small\">\n                              <p>评分: {'⭐'.repeat(review.rating)}</p>\n                              <p>内容: \n                                <Paragraph\n                                  ellipsis={{ \n                                    rows: 2,\n                                    expandable: true,\n                                    symbol: '展开'\n                                  }}\n                                >\n                                  {review.content}\n                                </Paragraph>\n                              </p>\n                              <p>作者: {review.author}</p>\n                              <p>时间: {new Date(review.created_at).toLocaleString()}</p>\n                            </Card>\n                          </Col>\n                        ))}\n                      {androidReviews.length === 0 && (\n                        <Col span={24}>\n                          <Card size=\"small\">\n                            <p>暂无 Android 评论</p>\n                          </Card>\n                        </Col>\n                      )}\n                    </Row>\n                    {androidReviews.length > 0 && (\n                      <div style={{ textAlign: 'right', marginTop: '16px' }}>\n                        <Pagination\n                          current={currentPage.android}\n                          onChange={(page) => setCurrentPage(prev => ({ ...prev, android: page }))}\n                          total={androidReviews.length}\n                          pageSize={PAGE_SIZE}\n                          showTotal={(total) => `共 ${total} 条评论`}\n                        />\n                      </div>\n                    )}\n                  </Tabs.TabPane>\n                </Tabs>\n              </div>\n            </>\n          )}\n        </Card>\n      )}\n\n      <Modal\n        title={editingApp ? \"修改应用\" : \"添加应用\"}\n        visible={isModalVisible || !!editingApp}\n        onCancel={() => {\n          setIsModalVisible(false);\n          setEditingApp(null);\n          form.resetFields();\n        }}\n        footer={null}\n      >\n        <Form\n          form={form}\n          onFinish={editingApp ? handleEditApp : handleAddApp}\n          layout=\"vertical\"\n        >\n          <Form.Item\n            name=\"name\"\n            label=\"应用名称\"\n            rules={[{ required: true }]}\n          >\n            <Input />\n          </Form.Item>\n          \n          <Form.Item\n            name=\"platform\"\n            label=\"平台\"\n            rules={[{ required: true }]}\n          >\n            <Select>\n              <Select.Option value=\"ios\">iOS</Select.Option>\n              <Select.Option value=\"android\">Android</Select.Option>\n              <Select.Option value=\"both\">双平台</Select.Option>\n            </Select>\n          </Form.Item>\n          \n          <Form.Item\n            name=\"app_store_country\"\n            label=\"App Store 地区\"\n            initialValue=\"cn\"\n          >\n            <Select>\n              {Object.entries(COUNTRIES).map(([code, name]) => (\n                <Select.Option key={code} value={code}>\n                  {name}\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n          \n          <Form.Item\n            name=\"play_store_country\"\n            label=\"Play Store 地区\"\n            initialValue=\"cn\"\n          >\n            <Select>\n              {Object.entries(COUNTRIES).map(([code, name]) => (\n                <Select.Option key={code} value={code}>\n                  {name}\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n          \n          <Form.Item\n            name=\"app_store_id\"\n            label=\"App Store ID\"\n            rules={[\n              {\n                pattern: /^\\d+$/,\n                message: 'App Store ID 必须是数字'\n              }\n            ]}\n          >\n            <Input placeholder=\"例如：414478124\" />\n          </Form.Item>\n          \n          <Form.Item\n            name=\"play_store_id\"\n            label=\"Play Store ID\"\n          >\n            <Input />\n          </Form.Item>\n          \n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              提交\n            </Button>\n          </Form.Item>\n        </Form>\n      </Modal>\n\n      <Modal\n        title=\"请输入授权码\"\n        visible={authModalVisible}\n        onOk={async () => {\n          try {\n            localStorage.setItem('authCode', authCode);\n            await authAction();\n            setAuthModalVisible(false);\n          } catch (error) {\n            message.error('操作失败');\n          }\n        }}\n        onCancel={() => {\n          setAuthModalVisible(false);\n          setAuthAction(() => Promise.resolve());\n        }}\n      >\n        <Input.Password\n          value={authCode}\n          onChange={e => setAuthCode(e.target.value)}\n          placeholder=\"请输入授权码\"\n        />\n      </Modal>\n    </div>\n  );\n}; ","import React from 'react';\nimport { Layout } from 'antd';\nimport { AppList } from './components/AppList';\nimport './App.less';\n\nconst { Header, Content } = Layout;\n\nconst App: React.FC = () => {\n  return (\n    <Layout>\n      <Header style={{ background: '#fff', padding: '0 24px' }}>\n        <h1>应用评分追踪系统</h1>\n      </Header>\n      <Content>\n        <AppList />\n      </Content>\n    </Layout>\n  );\n};\n\nexport default App; ","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}